print("Hello world!")
print("Nahid is awesome.");
dataset$Country = factor(dataset$Country,
levels=c('France', 'Spain', 'Germany'),
labels=c(1,2,3))
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
ataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
setwd("C:/Users/Nahid/Desktop/Machine Learning practice")
ataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels=c('France', 'Spain', 'Germany'),
labels=c(1,2,3))
View(dataset)
View(dataset)
View(ataset)
View(ataset)
dataset$Purchased = factor(dataset$Purchased,
levels=c('No', 'Yes'),
labels=c(0,1))
install.packages(
'caTools'
)
library(caTools
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
library("caTools", lib.loc="~/R/win-library/3.4")
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
library("bitops", lib.loc="~/R/win-library/3.4")
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
#feature scaling
training_set = scale(training_set)
test_set = scale(test_set)
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(training_set)
